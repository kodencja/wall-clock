{"version":3,"sources":["components/Oclock.js","App.js","reportWebVitals.js","index.js"],"names":["Oclock","props","onGetClass","onStyle","getHourHandClass","getMinHandClass","getSecHandClass","onSecondHandStyle","onHourHandStyle","onMinHandStyle","className","style","React","memo","App","state","AppClass","ifHit","clockClass1","clockClass2","hourClass1","minClass1","secClass1","hourClass2","minClass2","secClass2","secondHandStyle","transitionDuration","transform","minHandStyle","hourHandStyle","style1","backgroundColor","style2","opacity","intervCall","setInterval","setDate","transitionDurSec","transitionDurMin","transitionDurHour","secRotate","minRotate","hourRotate","clockCl1","clockCl2","AppCl","now","Date","hours","getHours","minutes","getMinutes","secondsDegrees","getSeconds","minutesDeg","hoursDeg","ifWasHit","setState","this","clearInterval","color","marginBottom","marginTop","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEA,SAASA,EAAOC,GAAO,IAInBC,EAQED,EARFC,WACAC,EAOEF,EAPFE,QACAC,EAMEH,EANFG,iBACAC,EAKEJ,EALFI,gBACAC,EAIEL,EAJFK,gBACAC,EAGEN,EAHFM,kBACAC,EAEEP,EAFFO,gBACAC,EACER,EADFQ,eAGF,OACE,8BACE,qBAAKC,UAAWR,EAAYS,MAAOR,EAAnC,SACE,sBAAKO,UAAU,aAAf,UACE,qBACEA,UAAW,QAAUN,EACrBO,MAAOH,IAET,qBACEE,UAAW,QAAUL,EACrBM,MAAOF,IAET,qBACEC,UAAW,QAAUJ,EACrBK,MAAOJ,WAQJK,UAAMC,KAAKb,GCwJXc,E,4MAzLbC,MAAQ,CACNC,SAAU,GACVC,OAAO,EACPC,YAAa,GACbC,YAAa,GACbC,WAAY,cACZC,UAAW,aACXC,UAAW,gBACXC,WAAY,cACZC,UAAW,aACXC,UAAW,gBACXC,gBAAiB,CACfC,mBAAoB,GACpBC,UAAW,IAEbC,aAAc,CACZF,mBAAoB,GACpBC,UAAW,IAEbE,cAAe,CACbH,mBAAoB,GACpBC,UAAW,IAEbG,OAAQ,CACNC,gBAAiB,aAEnBC,OAAQ,CACNL,UAAU,WAAD,OAAa,IAAb,QACTM,QAAS,I,EAYbC,WAAa,WACXC,aAAY,WACV,EAAKC,YACJ,M,EAILA,QAAU,WACR,IAQIC,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAhBIC,EAAM,IAAIC,KACVC,EAAQF,EAAIG,WACZC,EAAUJ,EAAIK,aAEdC,EAA2B,EADjBN,EAAIO,aAEdC,EAAa,EAAIJ,EACjBK,EAAmB,GAARP,EAAmBM,EAAa,IAAnB,GAW5BE,EAAW,EAAK1C,MAAME,MAEpBoC,GAAkB,GAAKA,GAAkB,GAC3Cf,EAAmB,KACnBM,EAAW,WACXa,GAAW,GACFJ,EAAiB,GAAKA,GAAkB,IACjDf,EAAmB,QACnBM,EAAW,YAEM,IAAba,IACFZ,EAAW,aAEbC,EAAQ,OACCO,EAAiB,IAAMA,EAAiB,MAChC,IAAbI,IACFZ,EAAW,aAEbP,EAAmB,QACnBQ,EAAQ,IAERR,EAAmB,QAErBG,EAAS,iBAAaY,EAAb,QAGPd,EADiB,MAAfgB,GAAqC,IAAfA,EACL,KAEA,QAErBb,EAAS,iBAAaa,EAAb,QAE+Bf,EAAvB,MAAbgB,GAAiC,IAAbA,EAAoC,KACnC,QACzBb,EAAU,iBAAaa,EAAb,QAIV,EAAKE,SAAS,CACZ1C,SAAU8B,EACV7B,MAAOwC,EACPvC,YAAa0B,EACbzB,YAAa0B,EACbnB,gBAAiB,CACfC,mBAAoBW,EACpBV,UAAWa,GAEbZ,aAAc,CACZF,mBAAoBY,EACpBX,UAAWc,GAEbZ,cAAe,CACbH,mBAAoBa,EACpBZ,UAAWe,M,kEArFfgB,KAAKxB,e,6CAILyB,cAAcD,KAAKxB,c,+BAsFX,IAAD,EAgBHwB,KAAK5C,MAdPC,EAFK,EAELA,SACAE,EAHK,EAGLA,YACAC,EAJK,EAILA,YACAC,EALK,EAKLA,WACAG,EANK,EAMLA,WACAC,EAPK,EAOLA,UACAH,EARK,EAQLA,UACAC,EATK,EASLA,UACAG,EAVK,EAULA,UACAK,EAXK,EAWLA,cACAD,EAZK,EAYLA,aACAH,EAbK,EAaLA,gBACAK,EAdK,EAcLA,OACAE,EAfK,EAeLA,OAGF,OACE,sBAAKvB,UAAW,OAASM,EAAzB,UACE,qBAAKN,UAAU,QAAf,oCACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACER,WAAY,UAAYgB,EACxBd,iBAAkBgB,EAClBf,gBAAiBgB,EACjBf,gBAAiBgB,EACjBd,gBAAiBsB,EACjBrB,eAAgBoB,EAChBtB,kBAAmBmB,EACnBvB,QAAS4B,IAGX,cAAC,EAAD,CACE7B,WAAY,UAAYiB,EACxBf,iBAAkBmB,EAClBlB,gBAAiBmB,EACjBlB,gBAAiBmB,EACjBjB,gBAAiBsB,EACjBrB,eAAgBoB,EAChB1B,QAAS8B,OAGb,sBAAKvB,UAAU,OAAf,UACE,qBACEC,MAAO,CACLkD,MAAO,eACPC,aAAc,OACdC,UAAW,QAJf,2DASA,wCACO,yD,GAlLCC,iBCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d811f883.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Oclock(props) {\r\n  //   console.log(\"Oclock function\");\r\n\r\n  const {\r\n    onGetClass,\r\n    onStyle,\r\n    getHourHandClass,\r\n    getMinHandClass,\r\n    getSecHandClass,\r\n    onSecondHandStyle,\r\n    onHourHandStyle,\r\n    onMinHandStyle,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className={onGetClass} style={onStyle}>\r\n        <div className=\"clock-face\">\r\n          <div\r\n            className={\"hand \" + getHourHandClass}\r\n            style={onHourHandStyle}\r\n          ></div>\r\n          <div\r\n            className={\"hand \" + getMinHandClass}\r\n            style={onMinHandStyle}\r\n          ></div>\r\n          <div\r\n            className={\"hand \" + getSecHandClass}\r\n            style={onSecondHandStyle}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Oclock);\r\n","import React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport Oclock from \"./components/Oclock\";\n\nclass App extends PureComponent {\n  state = {\n    AppClass: \"\",\n    ifHit: false,\n    clockClass1: \"\",\n    clockClass2: \"\",\n    hourClass1: \"hour-hand-1\",\n    minClass1: \"min-hand-1\",\n    secClass1: \"second-hand-1\",\n    hourClass2: \"hour-hand-2\",\n    minClass2: \"min-hand-2\",\n    secClass2: \"second-hand-2\",\n    secondHandStyle: {\n      transitionDuration: \"\",\n      transform: \"\",\n    },\n    minHandStyle: {\n      transitionDuration: \"\",\n      transform: \"\",\n    },\n    hourHandStyle: {\n      transitionDuration: \"\",\n      transform: \"\",\n    },\n    style1: {\n      backgroundColor: \"#018fed9a\",\n    },\n    style2: {\n      transform: `rotateY(${180}deg)`,\n      opacity: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.intervCall();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervCall);\n  }\n\n  intervCall = () => {\n    setInterval(() => {\n      this.setDate();\n    }, 1000);\n  };\n\n  // function responsible for changing time in clock and adding appropriate classes to particular objects\n  setDate = () => {\n    const now = new Date();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const seconds = now.getSeconds();\n    const secondsDegrees = seconds * 6;\n    const minutesDeg = 6 * minutes;\n    const hoursDeg = hours * 30 + 30 * (minutesDeg / 360);\n\n    let transitionDurSec,\n      transitionDurMin,\n      transitionDurHour,\n      secRotate,\n      minRotate,\n      hourRotate,\n      clockCl1,\n      clockCl2,\n      AppCl,\n      ifWasHit = this.state.ifHit;\n\n    if (secondsDegrees >= 0 && secondsDegrees <= 9) {\n      transitionDurSec = \"0s\";\n      clockCl1 = \"flipOpen\";\n      ifWasHit = true;\n    } else if (secondsDegrees > 9 && secondsDegrees <= 22) {\n      transitionDurSec = \"0.05s\";\n      clockCl1 = \"flipOpen\";\n      // if (this.state.ifHit === true) {\n      if (ifWasHit === true) {\n        clockCl2 = \"disappear\";\n      }\n      AppCl = \"hit\";\n    } else if (secondsDegrees > 22 && secondsDegrees < 180) {\n      if (ifWasHit === true) {\n        clockCl2 = \"disappear\";\n      }\n      transitionDurSec = \"0.05s\";\n      AppCl = \"\";\n    } else {\n      transitionDurSec = \"0.05s\";\n    }\n    secRotate = `rotate(${secondsDegrees}deg)`;\n\n    if (minutesDeg === 360 || minutesDeg === 0) {\n      transitionDurMin = \"0s\";\n    } else {\n      transitionDurMin = \"0.05s\";\n    }\n    minRotate = `rotate(${minutesDeg}deg)`;\n\n    if (hoursDeg === 360 || hoursDeg === 0) transitionDurHour = \"0s\";\n    else transitionDurHour = \"0.05s\";\n    hourRotate = `rotate(${hoursDeg}deg)`;\n\n    // console.log(secRotate);\n\n    this.setState({\n      AppClass: AppCl,\n      ifHit: ifWasHit,\n      clockClass1: clockCl1,\n      clockClass2: clockCl2,\n      secondHandStyle: {\n        transitionDuration: transitionDurSec,\n        transform: secRotate,\n      },\n      minHandStyle: {\n        transitionDuration: transitionDurMin,\n        transform: minRotate,\n      },\n      hourHandStyle: {\n        transitionDuration: transitionDurHour,\n        transform: hourRotate,\n      },\n    });\n  };\n\n  render() {\n    const {\n      AppClass,\n      clockClass1,\n      clockClass2,\n      hourClass1,\n      hourClass2,\n      minClass2,\n      minClass1,\n      secClass1,\n      secClass2,\n      hourHandStyle,\n      minHandStyle,\n      secondHandStyle,\n      style1,\n      style2,\n    } = this.state;\n\n    return (\n      <div className={\"App \" + AppClass}>\n        <div className=\"title\">Wall clock animation *</div>\n        <div className=\"container\">\n          <Oclock\n            onGetClass={\"clock1 \" + clockClass1}\n            getHourHandClass={hourClass1}\n            getMinHandClass={minClass1}\n            getSecHandClass={secClass1}\n            onHourHandStyle={hourHandStyle}\n            onMinHandStyle={minHandStyle}\n            onSecondHandStyle={secondHandStyle}\n            onStyle={style1}\n          />\n\n          <Oclock\n            onGetClass={\"clock2 \" + clockClass2}\n            getHourHandClass={hourClass2}\n            getMinHandClass={minClass2}\n            getSecHandClass={secClass2}\n            onHourHandStyle={hourHandStyle}\n            onMinHandStyle={minHandStyle}\n            onStyle={style2}\n          />\n        </div>\n        <div className=\"foot\">\n          <div\n            style={{\n              color: \"midnightblue\",\n              marginBottom: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            * React App (Class and Functional components)\n          </div>\n          <div>\n            2020 <i>by kodencja</i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}